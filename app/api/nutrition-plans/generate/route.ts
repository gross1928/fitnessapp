import { NextRequest, NextResponse } from 'next/server';
import OpenAI from 'openai';

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    const { allergies, dislikes, likes, budget, cookingTime, mealsPerDay, dietaryRestrictions, goals } = body;

    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–∞–ª–æ—Ä–∏–∏ –Ω–∞ –¥–µ–Ω—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ü–µ–ª–∏
    let dailyCalories = 2500; // –±–∞–∑–æ–≤–∞—è –Ω–æ—Ä–º–∞
    if (goals === 'lose_weight') {
      dailyCalories = 2000; // –¥–µ—Ñ–∏—Ü–∏—Ç –∫–∞–ª–æ—Ä–∏–π –¥–ª—è –ø–æ—Ö—É–¥–µ–Ω–∏—è
    } else if (goals === 'gain_muscle') {
      dailyCalories = 3000; // –ø—Ä–æ—Ñ–∏—Ü–∏—Ç –∫–∞–ª–æ—Ä–∏–π –¥–ª—è –Ω–∞–±–æ—Ä–∞ –º–∞—Å—Å—ã
    } else if (goals === 'maintain') {
      dailyCalories = 2500; // –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–µ—Å–∞
    } else if (goals === 'improve_health') {
      dailyCalories = 2300; // –∑–¥–æ—Ä–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log('üîç –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è:', {
      mealsPerDay,
      goals,
      budget,
      cookingTime
    });

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø—ã –ø—Ä–∏–µ–º–æ–≤ –ø–∏—â–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    let mealTypes = ['–ó–∞–≤—Ç—Ä–∞–∫', '–û–±–µ–¥', '–£–∂–∏–Ω'];
    let calorieDistribution = [0.3, 0.4, 0.3]; // –ó–∞–≤—Ç—Ä–∞–∫, –û–±–µ–¥, –£–∂–∏–Ω
    
    if (mealsPerDay === 4) {
      mealTypes = ['–ó–∞–≤—Ç—Ä–∞–∫', '–ü–µ—Ä–µ–∫—É—Å', '–û–±–µ–¥', '–£–∂–∏–Ω'];
      calorieDistribution = [0.25, 0.2, 0.35, 0.2]; // –ó–∞–≤—Ç—Ä–∞–∫, –ü–µ—Ä–µ–∫—É—Å, –û–±–µ–¥, –£–∂–∏–Ω
    } else if (mealsPerDay === 5) {
      mealTypes = ['–ó–∞–≤—Ç—Ä–∞–∫', '–ü–µ—Ä–µ–∫—É—Å', '–û–±–µ–¥', '–ü–æ–ª–¥–Ω–∏–∫', '–£–∂–∏–Ω'];
      calorieDistribution = [0.25, 0.15, 0.3, 0.15, 0.15]; // –ó–∞–≤—Ç—Ä–∞–∫, –ü–µ—Ä–µ–∫—É—Å, –û–±–µ–¥, –ü–æ–ª–¥–Ω–∏–∫, –£–∂–∏–Ω
    } else if (mealsPerDay === 6) {
      mealTypes = ['–ó–∞–≤—Ç—Ä–∞–∫', '–ü–µ—Ä–µ–∫—É—Å', '–û–±–µ–¥', '–ü–æ–ª–¥–Ω–∏–∫', '–£–∂–∏–Ω', '–ü–µ—Ä–µ–∫—É—Å'];
      calorieDistribution = [0.2, 0.15, 0.25, 0.15, 0.15, 0.1]; // –ó–∞–≤—Ç—Ä–∞–∫, –ü–µ—Ä–µ–∫—É—Å, –û–±–µ–¥, –ü–æ–ª–¥–Ω–∏–∫, –£–∂–∏–Ω, –ü–µ—Ä–µ–∫—É—Å
    }

    console.log('üçΩÔ∏è –¢–∏–ø—ã –ø—Ä–∏–µ–º–æ–≤ –ø–∏—â–∏:', mealTypes);
    console.log('üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞–ª–æ—Ä–∏–π:', calorieDistribution);

    const prompt = `
–°–æ–∑–¥–∞–π –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è –Ω–∞ –æ–¥–∏–Ω –¥–µ–Ω—å –¥–ª—è —á–µ–ª–æ–≤–µ–∫–∞ —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏:

–¶–µ–ª—å: ${goals}
–ê–ª–ª–µ—Ä–≥–∏–∏: ${allergies.join(', ') || '–ù–µ—Ç'}
–ù–µ –ª—é–±–∏—Ç: ${dislikes.join(', ') || '–ù–µ—Ç –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π'}
–õ—é–±–∏—Ç: ${likes.join(', ') || '–í—Å–µ'}
–ë—é–¥–∂–µ—Ç: ${budget}
–í—Ä–µ–º—è –≥–æ—Ç–æ–≤–∫–∏: ${cookingTime}
–ü—Ä–∏–µ–º–æ–≤ –ø–∏—â–∏ –≤ –¥–µ–Ω—å: ${mealsPerDay}
–î–∏–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: ${dietaryRestrictions.join(', ') || '–ù–µ—Ç'}

–°–æ–∑–¥–∞–π –ø–ª–∞–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON —Å–æ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π:
{
  "id": "unique_id",
  "goal": "–æ–ø–∏—Å–∞–Ω–∏–µ —Ü–µ–ª–∏",
  "dailyCalories": ${dailyCalories},
  "meals": [
    {
      "type": "${mealTypes[0]}",
      "name": "–Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞",
      "description": "–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
      "calories": ${Math.round(dailyCalories * calorieDistribution[0])},
      "protein": —á–∏—Å–ª–æ –≤ –≥—Ä–∞–º–º–∞—Ö,
      "fats": —á–∏—Å–ª–æ –≤ –≥—Ä–∞–º–º–∞—Ö,
      "carbs": —á–∏—Å–ª–æ –≤ –≥—Ä–∞–º–º–∞—Ö,
      "ingredients": ["–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç1", "–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç2"],
      "instructions": ["—à–∞–≥1", "—à–∞–≥2"],
      "prepTime": —á–∏—Å–ª–æ –≤ –º–∏–Ω—É—Ç–∞—Ö,
      "cost": "low/medium/high"
    }
    ${mealTypes.length > 1 ? `,
    {
      "type": "${mealTypes[1]}",
      "name": "–Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞",
      "description": "–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
      "calories": ${Math.round(dailyCalories * calorieDistribution[1])},
      "protein": —á–∏—Å–ª–æ –≤ –≥—Ä–∞–º–º–∞—Ö,
      "fats": —á–∏—Å–ª–æ –≤ –≥—Ä–∞–º–º–∞—Ö,
      "carbs": —á–∏—Å–ª–æ –≤ –≥—Ä–∞–º–º–∞—Ö,
      "ingredients": ["–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç1", "–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç2"],
      "instructions": ["—à–∞–≥1", "—à–∞–≥2"],
      "prepTime": —á–∏—Å–ª–æ –≤ –º–∏–Ω—É—Ç–∞—Ö,
      "cost": "low/medium/high"
    }` : ''}
    ${mealTypes.length > 2 ? `,
    {
      "type": "${mealTypes[2]}",
      "name": "–Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞",
      "description": "–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
      "calories": ${Math.round(dailyCalories * calorieDistribution[2])},
      "protein": —á–∏—Å–ª–æ –≤ –≥—Ä–∞–º–º–∞—Ö,
      "fats": —á–∏—Å–ª–æ –≤ –≥—Ä–∞–º–º–∞—Ö,
      "carbs": —á–∏—Å–ª–æ –≤ –≥—Ä–∞–º–º–∞—Ö,
      "ingredients": ["–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç1", "–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç2"],
      "instructions": ["—à–∞–≥1", "—à–∞–≥2"],
      "prepTime": —á–∏—Å–ª–æ –≤ –º–∏–Ω—É—Ç–∞—Ö,
      "cost": "low/medium/high"
    }` : ''}
    ${mealTypes.length > 3 ? `,
    {
      "type": "${mealTypes[3]}",
      "name": "–Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞",
      "description": "–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
      "calories": ${Math.round(dailyCalories * calorieDistribution[3])},
      "protein": —á–∏—Å–ª–æ –≤ –≥—Ä–∞–º–º–∞—Ö,
      "fats": —á–∏—Å–ª–æ –≤ –≥—Ä–∞–º–º–∞—Ö,
      "carbs": —á–∏—Å–ª–æ –≤ –≥—Ä–∞–º–º–∞—Ö,
      "ingredients": ["–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç1", "–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç2"],
      "instructions": ["—à–∞–≥1", "—à–∞–≥2"],
      "prepTime": —á–∏—Å–ª–æ –≤ –º–∏–Ω—É—Ç–∞—Ö,
      "cost": "low/medium/high"
    }` : ''}
    ${mealTypes.length > 4 ? `,
    {
      "type": "${mealTypes[4]}",
      "name": "–Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞",
      "description": "–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
      "calories": ${Math.round(dailyCalories * calorieDistribution[4])},
      "protein": —á–∏—Å–ª–æ –≤ –≥—Ä–∞–º–º–∞—Ö,
      "fats": —á–∏—Å–ª–æ –≤ –≥—Ä–∞–º–º–∞—Ö,
      "carbs": —á–∏—Å–ª–æ –≤ –≥—Ä–∞–º–º–∞—Ö,
      "ingredients": ["–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç1", "–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç2"],
      "instructions": ["—à–∞–≥1", "—à–∞–≥2"],
      "prepTime": —á–∏—Å–ª–æ –≤ –º–∏–Ω—É—Ç–∞—Ö,
      "cost": "low/medium/high"
    }` : ''}
    ${mealTypes.length > 5 ? `,
    {
      "type": "${mealTypes[5]}",
      "name": "–Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞",
      "description": "–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
      "calories": ${Math.round(dailyCalories * calorieDistribution[5])},
      "protein": —á–∏—Å–ª–æ –≤ –≥—Ä–∞–º–º–∞—Ö,
      "fats": —á–∏—Å–ª–æ –≤ –≥—Ä–∞–º–º–∞—Ö,
      "carbs": —á–∏—Å–ª–æ –≤ –≥—Ä–∞–º–º–∞—Ö,
      "ingredients": ["–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç1", "–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç2"],
      "instructions": ["—à–∞–≥1", "—à–∞–≥2"],
      "prepTime": —á–∏—Å–ª–æ –≤ –º–∏–Ω—É—Ç–∞—Ö,
      "cost": "low/medium/high"
    }` : ''}
  ],
  "tips": ["—Å–æ–≤–µ—Ç1", "—Å–æ–≤–µ—Ç2", "—Å–æ–≤–µ—Ç3"],
  "shoppingList": ["–ø—Ä–æ–¥—É–∫—Ç1", "–ø—Ä–æ–¥—É–∫—Ç2", "–ø—Ä–æ–¥—É–∫—Ç3"]
}

–í–∞–∂–Ω–æ: —Å–æ–∑–¥–∞–π —Ç–æ–ª—å–∫–æ –ø–ª–∞–Ω –Ω–∞ –æ–¥–∏–Ω –¥–µ–Ω—å, –Ω–µ –Ω–∞ –Ω–µ–¥–µ–ª—é.`;

    const completion = await openai.chat.completions.create({
      model: "gpt-4",
      messages: [
        {
          role: "system",
          content: "–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –ø–∏—Ç–∞–Ω–∏—é –∏ –¥–∏–µ—Ç–æ–ª–æ–≥–∏–∏. –°–æ–∑–¥–∞–≤–∞–π –ø—Ä–æ—Å—Ç—ã–µ, –≤–∫—É—Å–Ω—ã–µ –∏ –ø–æ–ª–µ–∑–Ω—ã–µ –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è."
        },
        {
          role: "user",
          content: prompt
        }
      ],
      temperature: 0.7,
      max_tokens: 2000
    });

    const responseText = completion.choices[0]?.message?.content;
    
    if (!responseText) {
      throw new Error('–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç OpenAI');
    }

    // –ò–∑–≤–ª–µ–∫–∞–µ–º JSON –∏–∑ –æ—Ç–≤–µ—Ç–∞
    const jsonMatch = responseText.match(/\{[\s\S]*\}/);
    if (!jsonMatch) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ JSON –≤ –æ—Ç–≤–µ—Ç–µ');
    }

    const planData = JSON.parse(jsonMatch[0]);
    
    console.log('‚úÖ –ü–ª–∞–Ω —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω:', planData);

    return NextResponse.json(planData);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–ª–∞–Ω–∞ –ø–∏—Ç–∞–Ω–∏—è:', error);
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–º–æ-–ø–ª–∞–Ω –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    return NextResponse.json({
      id: 'demo',
      goal: '–ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–µ—Å–∞',
      dailyCalories: 2500,
      meals: [
        {
          type: '–ó–∞–≤—Ç—Ä–∞–∫',
          name: '–û–≤—Å—è–Ω–∫–∞ —Å —è–≥–æ–¥–∞–º–∏',
          description: '–ü–∏—Ç–∞—Ç–µ–ª—å–Ω–∞—è –æ–≤—Å—è–Ω–∫–∞ —Å —Å–≤–µ–∂–∏–º–∏ —è–≥–æ–¥–∞–º–∏ –∏ –æ—Ä–µ—Ö–∞–º–∏',
          calories: 350,
          protein: 12,
          fats: 8,
          carbs: 55,
          ingredients: ['–û–≤—Å—è–Ω–∫–∞', '–Ø–≥–æ–¥—ã', '–û—Ä–µ—Ö–∏', '–ú–µ–¥'],
          instructions: ['–°–≤–∞—Ä–∏—Ç—å –æ–≤—Å—è–Ω–∫—É', '–î–æ–±–∞–≤–∏—Ç—å —è–≥–æ–¥—ã –∏ –æ—Ä–µ—Ö–∏', '–ü–æ–ª–∏—Ç—å –º–µ–¥–æ–º'],
          prepTime: 10,
          cost: 'low'
        },
        {
          type: '–û–±–µ–¥',
          name: '–ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞ —Å –æ–≤–æ—â–∞–º–∏',
          description: '–ó–∞–ø–µ—á–µ–Ω–Ω–∞—è –∫—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞ —Å —Ç—É—à–µ–Ω—ã–º–∏ –æ–≤–æ—â–∞–º–∏',
          calories: 450,
          protein: 35,
          fats: 15,
          carbs: 25,
          ingredients: ['–ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞', '–ë—Ä–æ–∫–∫–æ–ª–∏', '–ú–æ—Ä–∫–æ–≤—å', '–û–ª–∏–≤–∫–æ–≤–æ–µ –º–∞—Å–ª–æ'],
          instructions: ['–ó–∞–ø–µ—á—å –∫—É—Ä–∏—Ü—É', '–ü–æ—Ç—É—à–∏—Ç—å –æ–≤–æ—â–∏', '–ü–æ–¥–∞—Ç—å –≤–º–µ—Å—Ç–µ'],
          prepTime: 25,
          cost: 'medium'
        },
        {
          type: '–£–∂–∏–Ω',
          name: '–õ–æ—Å–æ—Å—å —Å —Ä–∏—Å–æ–º',
          description: '–ó–∞–ø–µ—á–µ–Ω–Ω—ã–π –ª–æ—Å–æ—Å—å —Å –±—É—Ä—ã–º —Ä–∏—Å–æ–º',
          calories: 400,
          protein: 30,
          fats: 20,
          carbs: 30,
          ingredients: ['–õ–æ—Å–æ—Å—å', '–ë—É—Ä—ã–π —Ä–∏—Å', '–õ–∏–º–æ–Ω', '–¢—Ä–∞–≤—ã'],
          instructions: ['–ó–∞–ø–µ—á—å –ª–æ—Å–æ—Å—å', '–°–≤–∞—Ä–∏—Ç—å —Ä–∏—Å', '–î–æ–±–∞–≤–∏—Ç—å –ª–∏–º–æ–Ω'],
          prepTime: 20,
          cost: 'high'
        }
      ],
      tips: ['–ü–µ–π—Ç–µ –±–æ–ª—å—à–µ –≤–æ–¥—ã', '–ï—à—å—Ç–µ –º–µ–¥–ª–µ–Ω–Ω–æ', '–ù–µ –ø—Ä–æ–ø—É—Å–∫–∞–π—Ç–µ –ø—Ä–∏–µ–º—ã –ø–∏—â–∏'],
      shoppingList: ['–û–≤—Å—è–Ω–∫–∞', '–Ø–≥–æ–¥—ã', '–û—Ä–µ—Ö–∏', '–ú–µ–¥', '–ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞', '–ë—Ä–æ–∫–∫–æ–ª–∏', '–ú–æ—Ä–∫–æ–≤—å', '–õ–æ—Å–æ—Å—å', '–ë—É—Ä—ã–π —Ä–∏—Å']
    });
  }
} 